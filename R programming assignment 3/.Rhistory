} else {
hospital.name <- sorted.data[num, 'Hospital.Name']
}
best.hospital<- rbind(best.hospital, data.frame(hospital = hospital.name, state = st))
}
best.hospital
}
rankall('heart attack', 20)
rankall <- function(outcome, num = 'best') {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check validity of outcome
if(outcome == 'heart attack') {
outcome <- 11
} else if(outcome == 'heart failure') {
outcome <- 17
} else if(outcome == 'pneumonia') {
outcome <- 23
} else {
stop('Invalid outcome!')
}
# Convert death rate to numeric and drop NAs
data[, outcome] <- as.numeric(data[, outcome])
data <- data[!is.na(data[, outcome]), ]
best.hospital <- data.frame(hospital = character(), state = character())
for(st in unique(data[['State']])) {
state.data <- data[data['State'] == st, ]
sorted.data <- state.data[order(state.data[outcome], state.data['Hospital.Name']), ]
# Find the n-th hospital in the state
hospital.name <- NA
if(num == 'best') {
hospital.name <- sorted.data[1, 'Hospital.Name']
} else if(num == 'worst') {
hosital.name <- sorted.data[nrow(sorted.data), 'Hospital.Name']
} else {
hospital.name <- sorted.data[num, 'Hospital.Name']
}
best.hospital<- rbind(best.hospital, data.frame(hospital = hospital.name, state = st))
}
# Get rid of NAs
best.hospital <- best.hospital[!is.na(best.hospital$hospital), ]
best.hospital[order(best.hospital$state), ]
}
rankall('heart attack', 20)
head(rankall('heart attack', 20), 10)
rankall <- function(outcome, num = 'best') {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check validity of outcome
if(outcome == 'heart attack') {
outcome <- 11
} else if(outcome == 'heart failure') {
outcome <- 17
} else if(outcome == 'pneumonia') {
outcome <- 23
} else {
stop('Invalid outcome!')
}
# Convert death rate to numeric and drop NAs
data[, outcome] <- as.numeric(data[, outcome])
data <- data[!is.na(data[, outcome]), ]
best.hospital <- data.frame(hospital = character(), state = character())
for(st in unique(data[['State']])) {
state.data <- data[data['State'] == st, ]
sorted.data <- state.data[order(state.data[outcome], state.data['Hospital.Name']), ]
# Find the n-th hospital in the state
hospital.name <- NA
if(num == 'best') {
hospital.name <- sorted.data[1, 'Hospital.Name']
} else if(num == 'worst') {
hosital.name <- sorted.data[nrow(sorted.data), 'Hospital.Name']
} else {
hospital.name <- sorted.data[num, 'Hospital.Name']
}
best.hospital<- rbind(best.hospital, data.frame(hospital = hospital.name, state = st))
}
# Get rid of NAs
best.hospital[order(best.hospital$state), ]
}
head(rankall('heart attack', 20), 10)
rankall <- function(outcome, num = 'best') {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check validity of outcome
if(outcome == 'heart attack') {
outcome <- 11
} else if(outcome == 'heart failure') {
outcome <- 17
} else if(outcome == 'pneumonia') {
outcome <- 23
} else {
stop('Invalid outcome!')
}
# Convert death rate to numeric and drop NAs
data[, outcome] <- as.numeric(data[, outcome])
data <- data[!is.na(data[, outcome]), ]
best.hospital <- data.frame(hospital = character(), state = character())
for(st in unique(data[['State']])) {
state.data <- data[data['State'] == st, ]
sorted.data <- state.data[order(state.data[outcome], state.data['Hospital.Name']), ]
# Find the n-th hospital in the state
hospital.name <- NA
if(num == 'best') {
hospital.name <- sorted.data[1, 'Hospital.Name']
} else if(num == 'worst') {
hosital.name <- sorted.data[nrow(sorted.data), 'Hospital.Name']
} else {
hospital.name <- sorted.data[num, 'Hospital.Name']
}
best.hospital<- rbind(best.hospital, data.frame(hospital = hospital.name, state = st))
}
# Get rid of NAs
best.hospital[order(best.hospital$state), ]
}
head(rankall('heart attack', 20), 10)
debug(rankall)
head(rankall('heart attack', 20), 10)
rankall <- function(outcome, num = 'best') {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check validity of outcome
if(outcome == 'heart attack') {
outcome <- 11
} else if(outcome == 'heart failure') {
outcome <- 17
} else if(outcome == 'pneumonia') {
outcome <- 23
} else {
stop('Invalid outcome!')
}
# Convert death rate to numeric and drop NAs
data[, outcome] <- as.numeric(data[, outcome])
data <- data[!is.na(data[, outcome]), ]
best.hospital <- data.frame(hospital = character(), state = character())
for(st in unique(data[['State']])) {
state.data <- data[data['State'] == st, ]
sorted.data <- state.data[order(state.data[outcome], state.data['Hospital.Name']), ]
# Find the n-th hospital in the state
hospital.name <- NA
if(num == 'best') {
hospital.name <- sorted.data[1, 'Hospital.Name']
} else if(num == 'worst') {
hosital.name <- sorted.data[nrow(sorted.data), 'Hospital.Name']
} else {
hospital.name <- sorted.data[num, 'Hospital.Name']
}
best.hospital<- rbind(best.hospital, data.frame(hospital = hospital.name, state = st))
}
# Get rid of NAs
best.hospital[order(best.hospital['state']), ]
}
head(rankall('heart attack', 20), 10)
rankall <- function(outcome, num = 'best') {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check validity of outcome
if(outcome == 'heart attack') {
outcome <- 11
} else if(outcome == 'heart failure') {
outcome <- 17
} else if(outcome == 'pneumonia') {
outcome <- 23
} else {
stop('Invalid outcome!')
}
# Convert death rate to numeric and drop NAs
data[, outcome] <- as.numeric(data[, outcome])
data <- data[!is.na(data[, outcome]), ]
best.hospital <- data.frame(hospital = character(), state = character())
for(st in unique(data[['State']])) {
state.data <- data[data['State'] == st, ]
sorted.data <- state.data[order(state.data[outcome], state.data['Hospital.Name']), ]
# Find the n-th hospital in the state
hospital.name <- NA
if(num == 'best') {
hospital.name <- sorted.data[1, 'Hospital.Name']
} else if(num == 'worst') {
hosital.name <- sorted.data[nrow(sorted.data), 'Hospital.Name']
} else {
hospital.name <- sorted.data[num, 'Hospital.Name']
}
best.hospital<- rbind(best.hospital, data.frame(hospital = hospital.name, state = st))
}
# Get rid of NAs
best.hospital[order(best.hospital['state']), ]
}
head(rankall('heart attack', 20), 10)
tail(rankall('pneumonia', 'worst'), 3)
tail(rankall('heart failure'), 10)
tail(rankall('pneumonia', 'worst'), 3)
debug(rankall)
tail(rankall('pneumonia', 'worst'), 3)
View(state.data)
rankall <- function(outcome, num = 'best') {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check validity of outcome
if(outcome == 'heart attack') {
outcome <- 11
} else if(outcome == 'heart failure') {
outcome <- 17
} else if(outcome == 'pneumonia') {
outcome <- 23
} else {
stop('Invalid outcome!')
}
# Convert death rate to numeric and drop NAs
data[, outcome] <- as.numeric(data[, outcome])
data <- data[!is.na(data[, outcome]), ]
best.hospital <- data.frame(hospital = character(), state = character())
for(st in unique(data[['State']])) {
state.data <- data[data['State'] == st & !is.na(data[outcome]), ]
sorted.data <- state.data[order(state.data[outcome], state.data['Hospital.Name']), ]
# Find the n-th hospital in the state
hospital.name <- NA
if(num == 'best') {
hospital.name <- sorted.data[1, 'Hospital.Name']
} else if(num == 'worst') {
hosital.name <- sorted.data[nrow(sorted.data), 'Hospital.Name']
} else {
hospital.name <- sorted.data[num, 'Hospital.Name']
}
best.hospital<- rbind(best.hospital, data.frame(hospital = hospital.name, state = st))
}
# Get rid of NAs
best.hospital[order(best.hospital['state']), ]
}
head(rankall('heart attack', 20), 10)
tail(rankall('pneumonia', 'worst'), 3)
tail(rankall('heart failure'), 10)
rankall <- function(outcome, num = 'best') {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check validity of outcome
if(outcome == 'heart attack') {
outcome <- 11
} else if(outcome == 'heart failure') {
outcome <- 17
} else if(outcome == 'pneumonia') {
outcome <- 23
} else {
stop('Invalid outcome!')
}
# Convert death rate to numeric and drop NAs
data[, outcome] <- as.numeric(data[, outcome])
data <- data[!is.na(data[, outcome]), ]
best.hospital <- data.frame(hospital = character(), state = character())
for(st in unique(data[['State']])) {
state.data <- data[data['State'] == st & !is.na(data[outcome]), ]
sorted.data <- state.data[order(state.data[outcome], state.data['Hospital.Name']), ]
# Find the n-th hospital in the state
hospital.name <- NA
if(num == 'best') {
hospital.name <- sorted.data[1, 'Hospital.Name']
} else if(num == 'worst') {
hosital.name <- sorted.data[nrow(sorted.data), 'Hospital.Name']
} else {
hospital.name <- sorted.data[num, 'Hospital.Name']
}
best.hospital<- rbind(best.hospital, data.frame(hospital = hospital.name, state = st))
}
# Get rid of NAs
best.hospital[order(best.hospital['state']), ]
}
head(rankall('heart attack', 20), 10)
tail(rankall('pneumonia', 'worst'), 3)
debug(rankall)
tail(rankall('pneumonia', 'worst'), 3)
View(sorted.data)
sorted.data
sorted.data[23]
sorted.data[c(1,23)]
sorted.data[c(2,23)]
View(best.hospital)
best.hospital
best.hospital
rankall <- function(outcome, num = 'best') {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check validity of outcome
if(outcome == 'heart attack') {
outcome <- 11
} else if(outcome == 'heart failure') {
outcome <- 17
} else if(outcome == 'pneumonia') {
outcome <- 23
} else {
stop('Invalid outcome!')
}
# Convert death rate to numeric and drop NAs
data[, outcome] <- as.numeric(data[, outcome])
data <- data[!is.na(data[, outcome]), ]
best.hospital <- data.frame(hospital = character(), state = character())
for(st in unique(data[['State']])) {
state.data <- data[data['State'] == st & !is.na(data[outcome]), ]
sorted.data <- state.data[order(state.data[outcome], state.data['Hospital.Name']), ]
# Find the n-th hospital in the state
hospital.name <- NA
if(num == 'best') {
hospital.name <<- sorted.data[1, 'Hospital.Name']
} else if(num == 'worst') {
hosital.name <<- sorted.data[nrow(sorted.data), 'Hospital.Name']
} else {
hospital.name <<- sorted.data[num, 'Hospital.Name']
}
best.hospital<<- rbind(best.hospital, data.frame(hospital = hospital.name, state = st))
}
# Get rid of NAs
best.hospital[order(best.hospital['state']), ]
}
tail(rankall('pneumonia', 'worst'), 3)
head(rankall('heart attack', 20), 10)
rankall <- function(outcome, num = 'best') {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check validity of outcome
if(outcome == 'heart attack') {
outcome <- 11
} else if(outcome == 'heart failure') {
outcome <- 17
} else if(outcome == 'pneumonia') {
outcome <- 23
} else {
stop('Invalid outcome!')
}
# Convert death rate to numeric and drop NAs
data[, outcome] <- as.numeric(data[, outcome])
data <- data[!is.na(data[, outcome]), ]
best.hospital <- data.frame(hospital = character(), state = character())
for(st in unique(data[['State']])) {
state.data <- data[data['State'] == st & !is.na(data[outcome]), ]
sorted.data <- state.data[order(state.data[outcome], state.data['Hospital.Name']), ]
# Find the n-th hospital in the state
hospital.name <- NA
if(num == 'best') {
hospital.name <<- sorted.data[1, 'Hospital.Name']
} else if(num == 'worst') {
hosital.name <<- sorted.data[nrow(sorted.data), 'Hospital.Name']
} else {
hospital.name <<- sorted.data[num, 'Hospital.Name']
}
best.hospital<<- rbind(best.hospital, data.frame(hospital = hospital.name, state = st))
}
# Get rid of NAs
best.hospital[order(best.hospital['state']), ]
}
head(rankall('heart attack', 20), 10)
rankall <- function(outcome, num = 'best') {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check validity of outcome
if(outcome == 'heart attack') {
outcome <- 11
} else if(outcome == 'heart failure') {
outcome <- 17
} else if(outcome == 'pneumonia') {
outcome <- 23
} else {
stop('Invalid outcome!')
}
# Convert death rate to numeric and drop NAs
data[, outcome] <- as.numeric(data[, outcome])
data <- data[!is.na(data[, outcome]), ]
best.hospital <- data.frame(hospital = character(), state = character())
for(st in unique(data[['State']])) {
state.data <- data[data['State'] == st & !is.na(data[outcome]), ]
sorted.data <- state.data[order(state.data[outcome], state.data['Hospital.Name']), ]
# Find the n-th hospital in the state
hospital.name <- NA
if(num == 'best') {
hospital.name <- sorted.data[1, 'Hospital.Name']
} else if(num == 'worst') {
hosital.name <- sorted.data[nrow(sorted.data), 'Hospital.Name']
} else {
hospital.name <- sorted.data[num, 'Hospital.Name']
}
best.hospital<- rbind(best.hospital, data.frame(hospital = hospital.name, state = st))
}
# Get rid of NAs
best.hospital[order(best.hospital['state']), ]
}
head(rankall('heart attack', 20), 10)
tail(rankall('pneumonia', 'worst'), 3)
rankall <- function(outcome, num = 'best') {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check validity of outcome
if(outcome == 'heart attack') {
outcome <- 11
} else if(outcome == 'heart failure') {
outcome <- 17
} else if(outcome == 'pneumonia') {
outcome <- 23
} else {
stop('Invalid outcome!')
}
# Convert death rate to numeric and drop NAs
data[, outcome] <- as.numeric(data[, outcome])
data <- data[!is.na(data[, outcome]), ]
best.hospital <- data.frame(hospital = character(), state = character())
for(st in unique(data[['State']])) {
state.data <- data[data['State'] == st & !is.na(data[outcome]), ]
sorted.data <- state.data[order(state.data[outcome], state.data['Hospital.Name']), ]
# Find the n-th hospital in the state
hospital.name <- NA
if(num == 'best') {
hospital.name <- sorted.data[1, 'Hospital.Name']
} else if(num == 'worst') {
hosital.name <- sorted.data[nrow(sorted.data), 'Hospital.Name']
} else {
hospital.name <- sorted.data[num, 'Hospital.Name']
}
best.hospital<- rbind(best.hospital, data.frame(hospital = hospital.name, state = st))
}
# Get rid of NAs
best.hospital[order(best.hospital['state']), ]
}
head(rankall('heart attack', 20), 10)
tail(rankall('pneumonia', 'worst'), 3)
tail(rankall('heart failure'), 10)
debug(rankall)
tail(rankall('pneumonia', 'worst'), 3)
rankall <- function(outcome, num = 'best') {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check validity of outcome
if(outcome == 'heart attack') {
outcome <- 11
} else if(outcome == 'heart failure') {
outcome <- 17
} else if(outcome == 'pneumonia') {
outcome <- 23
} else {
stop('Invalid outcome!')
}
# Convert death rate to numeric and drop NAs
data[, outcome] <- as.numeric(data[, outcome])
data <- data[!is.na(data[, outcome]), ]
best.hospital <- data.frame(hospital = character(), state = character())
for(st in unique(data[['State']])) {
state.data <- data[data['State'] == st & !is.na(data[outcome]), ]
sorted.data <- state.data[order(state.data[outcome], state.data['Hospital.Name']), ]
# Find the n-th hospital in the state
hospital.name <- NA
if(num == 'best') {
hospital.name <- sorted.data[1, 'Hospital.Name']
} else if(num == 'worst') {
hospital.name <- sorted.data[nrow(sorted.data), 'Hospital.Name']
} else {
hospital.name <- sorted.data[num, 'Hospital.Name']
}
best.hospital<- rbind(best.hospital, data.frame(hospital = hospital.name, state = st))
}
# Get rid of NAs
best.hospital[order(best.hospital['state']), ]
}
tail(rankall('pneumonia', 'worst'), 3)
best("SC", "heart attack")
best <- function(state, outcome) {
state.index <- 7
name.index <- 2
if(outcome == 'heart attack') {
outcome <- 11
} else if(outcome == 'heart failure') {
outcome <- 17
} else if(outcome == 'pneumonia') {
outcome <- 23
} else {
stop('Invalid outcome!')
}
outcome.data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome.data[, outcome] <- as.numeric(outcome.data[, outcome])
outcome.data <- outcome.data[, c(name.index, state.index, outcome)]
if(!any(outcome.data[2] == state)) {
stop("Invalid state!")
}
outcome.data <- outcome.data[outcome.data[2] == state, ]
outcome.sorted <- outcome.data[order(outcome.data[, 3], outcome.data[, 1]), ]
outcome.sorted[1, 1]
}
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital <- function(state, outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check validity of outcome argument
if(outcome == 'heart attack') {
outcome <- 11
} else if(outcome == 'heart failure') {
outcome <- 17
} else if(outcome == 'pneumonia') {
outcome <- 23
} else {
stop('Invalid outcome!')
}
# Check the validity of state argument
if(!any(data['State'] == state)) {
stop("Invalid state!")
}
# Convert death rate to numeric and drop NAs
data[, outcome] <- as.numeric(data[, outcome])
data <- data[!is.na(data[, outcome]), ]
# Filter states
data <- data[data['State'] == state, ]
sorted.data <- data[order(data[outcome], data['Hospital.Name']), ]
# Return
if(num == 'best') {
return(sorted.data[1, 'Hospital.Name'])
} else if(num == 'worst') {
return(sorted.data[nrow(sorted.data), 'Hospital.Name'])
} else {
return(sorted.data[num, 'Hospital.Name'])
}
}
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
